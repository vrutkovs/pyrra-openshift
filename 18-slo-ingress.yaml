---
apiVersion: pyrra.dev/v1alpha1
kind: ServiceLevelObjective
metadata:
  labels:
    prometheus: k8s
    role: alert-rules
  name: ingress-5xx-ratio
  namespace: pyrra
spec:
  description: ""
  indicator:
    ratio:
      errors:
        metric: haproxy_backend_http_responses_total{code="5xx",backend!="other/openshift_default"}
      total:
        metric: haproxy_backend_http_responses_total{backend!="other/openshift_default"}
  target: "99"
  window: 1d
---
apiVersion: pyrra.dev/v1alpha1
kind: ServiceLevelObjective
metadata:
  labels:
    prometheus: k8s
    role: alert-rules
  name: ingress-canary-latency
  namespace: pyrra
spec:
  description: ""
  indicator:
    latency:
      success:
        metric: ingress_canary_check_duration_bucket{le="200"}
      total:
        metric: ingress_canary_check_duration_count
  target: "99"
  window: 1d
---
apiVersion: pyrra.dev/v1alpha1
kind: ServiceLevelObjective
metadata:
  labels:
    prometheus: k8s
    role: alert-rules
  name: ingress-backend-connection-error-ratio
  namespace: pyrra
spec:
  description: ""
  indicator:
    ratio:
      errors:
        metric: haproxy_backend_connection_errors_total{backend!="other/openshift_default"}
      total:
        metric: haproxy_backend_connections_total{backend!="other/openshift_default"}
  target: "99"
  window: 1d
---
apiVersion: pyrra.dev/v1alpha1
kind: ServiceLevelObjective
metadata:
  labels:
    prometheus: k8s
    role: alert-rules
  name: ingress-server-connection-error-ratio
  namespace: pyrra
spec:
  description: ""
  indicator:
    ratio:
      errors:
        metric: haproxy_server_connection_errors_total
      total:
        metric: haproxy_server_connections_total
  target: "99"
  window: 1d
---
apiVersion: pyrra.dev/v1alpha1
kind: ServiceLevelObjective
metadata:
  labels:
    prometheus: k8s
    role: alert-rules
  name: ingress-server-connection-error-ratio
  namespace: pyrra
spec:
  description: ""
  indicator:
    ratio:
      errors:
        metric: haproxy_server_response_errors_total{server!~"fe_.*"}
      total:
        metric: haproxy_server_http_responses_total{server!~"fe_.*"}
  target: "99"
  window: 1d
